{"ast":null,"code":"import _slicedToArray from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/shelbyweb/src/Navigation/MobileNav.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { navItems } from '../utils';\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  menuButtonContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  },\n  list: {\n    width: 150\n  },\n  paper: {// backgroundColor: theme.palette.primary.main,\n    // color: theme.palette.text.primaryÃ·\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    marginLeft: 10,\n    color: theme.palette.text.primary\n  }\n}));\nexport default function MobileNav() {\n  const classes = useStyles(); //   const commonClasses = useHeaderStyles()\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        drawerOpenState = _React$useState2[0],\n        setDrawerOpenState = _React$useState2[1];\n\n  const _React$useState3 = React.useState(new Set()),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1];\n\n  function handleClick(name) {\n    const isOpen = open.has(name);\n    let newSet = open;\n\n    if (isOpen) {\n      newSet.delete(name);\n    } else {\n      newSet.add(name);\n    }\n\n    setOpen(new Set(newSet));\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"SHELBYART\"), React.createElement(\"div\", {\n    className: classes.menuButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-label\": \"Navigation Menu\",\n    \"aria-controls\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    onClick: event => setDrawerOpenState(true),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }))), React.createElement(SwipeableDrawer, {\n    \"data-testid\": \"MobileNavDrawer\",\n    anchor: \"right\",\n    open: drawerOpenState,\n    onClose: () => setDrawerOpenState(false),\n    onOpen: () => setDrawerOpenState(true),\n    classes: {\n      paper: classes.paper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: () => setDrawerOpenState(false),\n    onKeyDown: () => setDrawerOpenState(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(List, {\n    id: \"MobileNavItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, Object.entries(navItems).map(([key, {\n    to,\n    label,\n    subItems\n  }]) => subItems ? React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(ListItem, {\n    button: true,\n    onClick: () => handleClick(name),\n    classes: {\n      root: classes.listItemContainer\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    primary: label,\n    classes: {\n      root: classes.listItemText\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }), isOpen ? React.createElement(ExpandLess, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }) : React.createElement(ExpandMore, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  })), React.createElement(Collapse, {\n    in: isOpen,\n    timeout: \"auto\",\n    unmountOnExit: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(List, {\n    component: \"div\",\n    disablePadding: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, Object.entries(subItems).map(([key, {\n    to,\n    label\n  }]) => React.createElement(ListItem, {\n    key: key,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(Link, {\n    smooth: true,\n    to: to,\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, label)))))))) : React.createElement(ListItem, {\n    key: key,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Link, {\n    smooth: true,\n    to: to,\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, label)))))))), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/Navigation/MobileNav.js"],"names":["React","Button","MenuIcon","List","ListItem","ListItemText","SwipeableDrawer","HashLink","Link","makeStyles","Typography","clsx","navItems","useStyles","theme","menuIcon","color","palette","text","primary","fontSize","menuButtonContainer","flex","justifyContent","textAlign","list","width","paper","listItem","textDecoration","listItemText","marginLeft","MobileNav","classes","useState","drawerOpenState","setDrawerOpenState","Set","open","setOpen","handleClick","name","isOpen","has","newSet","delete","add","event","menuButton","Object","entries","map","key","to","label","subItems","root","listItemContainer","grow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport clsx from 'clsx'\n\nimport { navItems } from '../utils'\n\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  menuButtonContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  },\n  list: {\n    width: 150\n  },\n  paper: {\n    // backgroundColor: theme.palette.primary.main,\n    // color: theme.palette.text.primaryÃ·\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    marginLeft: 10,\n    color: theme.palette.text.primary\n  }\n}))\n\nexport default function MobileNav() {\n  const classes = useStyles()\n  //   const commonClasses = useHeaderStyles()\n  const [drawerOpenState, setDrawerOpenState] = React.useState(false)\n  const [open, setOpen] = React.useState(new Set())\n\n  function handleClick(name) {\n    const isOpen = open.has(name)\n    let newSet = open\n\n    if (isOpen) {\n      newSet.delete(name)\n    } else {\n      newSet.add(name)\n    }\n\n    setOpen(new Set(newSet))\n  }\n\n  return (\n    <>\n      <Typography>SHELBYART</Typography>\n      <div className={classes.menuButtonContainer}>\n        <Button\n          aria-label=\"Navigation Menu\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          onClick={event => setDrawerOpenState(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon className={classes.menuIcon} />\n        </Button>\n      </div>\n      <SwipeableDrawer\n        data-testid=\"MobileNavDrawer\"\n        anchor=\"right\"\n        open={drawerOpenState}\n        onClose={() => setDrawerOpenState(false)}\n        onOpen={() => setDrawerOpenState(true)}\n        classes={{ paper: classes.paper }}\n      >\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={() => setDrawerOpenState(false)}\n          onKeyDown={() => setDrawerOpenState(true)}\n        >\n          <List id=\"MobileNavItems\">\n            {/* main nav items */}\n            {Object.entries(navItems).map(([key, { to, label, subItems }]) =>\n              subItems ? (\n                <div key={key}>\n                  <ListItem\n                    button\n                    onClick={() => handleClick(name)}\n                    classes={{ root: classes.listItemContainer }}\n                  >\n                    <ListItemText primary={label} classes={{ root: classes.listItemText }} />\n                    {isOpen ? <ExpandLess /> : <ExpandMore />}\n                  </ListItem>\n                  <Collapse in={isOpen} timeout=\"auto\" unmountOnExit>\n                    <List component=\"div\" disablePadding>\n                      {/* foreach item in subnav */}\n                      {Object.entries(subItems).map(([key, { to, label }]) => (\n                        <ListItem key={key} button>\n                          <ListItemText>\n                            <Link smooth to={to} className={classes.listItem}>\n                              <Typography className={classes.listItemText}>{label}</Typography>\n                            </Link>\n                          </ListItemText>\n                        </ListItem>\n                      ))}\n                    </List>\n                  </Collapse>\n                </div>\n              ) : (\n                <ListItem key={key} button>\n                  <ListItemText>\n                    <Link smooth to={to} className={classes.listItem}>\n                      <Typography className={classes.listItemText}>{label}</Typography>\n                    </Link>\n                  </ListItemText>\n                </ListItem>\n              )\n            )}\n          </List>\n        </div>\n      </SwipeableDrawer>\n      <div className={classes.grow} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}