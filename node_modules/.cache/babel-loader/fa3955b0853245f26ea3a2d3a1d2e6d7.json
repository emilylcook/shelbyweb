{"ast":null,"code":"import _slicedToArray from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/shelbyweb/src/Navigation/MobileNav.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { navItems } from '../utils';\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  menuButtonContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  },\n  list: {\n    width: 150\n  },\n  paper: {// backgroundColor: theme.palette.primary.main,\n    // color: theme.palette.text.primaryÃ·\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    marginLeft: 10,\n    color: theme.palette.text.primary\n  }\n}));\nexport default function MobileNav() {\n  const classes = useStyles(); //   const commonClasses = useHeaderStyles()\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        drawerOpenState = _React$useState2[0],\n        setDrawerOpenState = _React$useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Typography, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"SHELBYART\"), React.createElement(\"div\", {\n    className: classes.menuButtonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Button, {\n    \"aria-label\": \"Navigation Menu\",\n    \"aria-controls\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    onClick: event => setDrawerOpenState(true),\n    className: classes.menuButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }))), React.createElement(SwipeableDrawer, {\n    \"data-testid\": \"MobileNavDrawer\",\n    anchor: \"right\",\n    open: drawerOpenState,\n    onClose: () => setDrawerOpenState(false),\n    onOpen: () => setDrawerOpenState(true),\n    classes: {\n      paper: classes.paper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: () => setDrawerOpenState(false),\n    onKeyDown: () => setDrawerOpenState(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(List, {\n    id: \"MobileNavItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, Object.entries(navItems).map(([key, {\n    to,\n    label,\n    subItems\n  }]) => subItems ? React.createElement(\"div\", {\n    key: key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listItem // onMouseEnter={() => setHoverOn(key)}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }, label), React.createElement(\"div\", {\n    // onClick={() => setExpand('')}\n    className: clsx(classes.subMenu, {// [classes.subMenuHidden]: hoverOn !== key\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, Object.entries(subItems).map(([key, {\n    to,\n    label\n  }]) => React.createElement(\"div\", {\n    key: key,\n    className: classes.subMenuItemContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Link, {\n    to: to,\n    className: classes.subMenuItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, label))))) : React.createElement(ListItem, {\n    key: key,\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Link, {\n    smooth: true,\n    to: to,\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, label)))))))), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/Navigation/MobileNav.js"],"names":["React","Button","MenuIcon","List","ListItem","ListItemText","SwipeableDrawer","HashLink","Link","makeStyles","Typography","clsx","navItems","useStyles","theme","menuIcon","color","palette","text","primary","fontSize","menuButtonContainer","flex","justifyContent","textAlign","list","width","paper","listItem","textDecoration","listItemText","marginLeft","MobileNav","classes","useState","drawerOpenState","setDrawerOpenState","event","menuButton","Object","entries","map","key","to","label","subItems","subMenu","subMenuItemContainer","subMenuItem","grow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\nimport clsx from 'clsx'\n\nimport { navItems } from '../utils'\n\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  menuButtonContainer: {\n    flex: 1,\n    justifyContent: 'flex-end',\n    textAlign: 'right'\n  },\n  list: {\n    width: 150\n  },\n  paper: {\n    // backgroundColor: theme.palette.primary.main,\n    // color: theme.palette.text.primaryÃ·\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    marginLeft: 10,\n    color: theme.palette.text.primary\n  }\n}))\n\nexport default function MobileNav() {\n  const classes = useStyles()\n  //   const commonClasses = useHeaderStyles()\n  const [drawerOpenState, setDrawerOpenState] = React.useState(false)\n\n  return (\n    <>\n      <Typography>SHELBYART</Typography>\n      <div className={classes.menuButtonContainer}>\n        <Button\n          aria-label=\"Navigation Menu\"\n          aria-controls=\"menu-appbar\"\n          aria-haspopup=\"true\"\n          onClick={event => setDrawerOpenState(true)}\n          className={classes.menuButton}\n        >\n          <MenuIcon className={classes.menuIcon} />\n        </Button>\n      </div>\n      <SwipeableDrawer\n        data-testid=\"MobileNavDrawer\"\n        anchor=\"right\"\n        open={drawerOpenState}\n        onClose={() => setDrawerOpenState(false)}\n        onOpen={() => setDrawerOpenState(true)}\n        classes={{ paper: classes.paper }}\n      >\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={() => setDrawerOpenState(false)}\n          onKeyDown={() => setDrawerOpenState(true)}\n        >\n          <List id=\"MobileNavItems\">\n            {/* main nav items */}\n            {Object.entries(navItems).map(([key, { to, label, subItems }]) =>\n              subItems ? (\n                <div key={key}>\n                  <Typography\n                    className={classes.listItem}\n                    // onMouseEnter={() => setHoverOn(key)}\n                  >\n                    {label}\n                  </Typography>\n                  <div\n                    // onClick={() => setExpand('')}\n                    className={clsx(classes.subMenu, {\n                      // [classes.subMenuHidden]: hoverOn !== key\n                    })}\n                  >\n                    {Object.entries(subItems).map(([key, { to, label }]) => (\n                      <div key={key} className={classes.subMenuItemContainer}>\n                        <Link to={to} className={classes.subMenuItem}>\n                          {label}\n                        </Link>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ) : (\n                <ListItem key={key} button>\n                  <ListItemText>\n                    <Link smooth to={to} className={classes.listItem}>\n                      <Typography className={classes.listItemText}>{label}</Typography>\n                    </Link>\n                  </ListItemText>\n                </ListItem>\n              )\n            )}\n          </List>\n        </div>\n      </SwipeableDrawer>\n      <div className={classes.grow} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}