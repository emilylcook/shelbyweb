{"ast":null,"code":"import thunk from 'redux-thunk';\nimport { persistStore } from 'redux-persist';\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\nimport { configureStore as starterKitConfig } from 'redux-starter-kit';\nimport createRootReducer from './reducers';\nconst base = process.env.REACT_APP_BASE_PATH || '/';\nconst history = createBrowserHistory({\n  basename: document.location.pathname.includes(base) ? base : '/'\n});\n\nfunction configureStore() {\n  const reactRouterMiddleware = routerMiddleware(history);\n  let middlewares = [thunk, reactRouterMiddleware];\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares = [...middlewares //add dev-only middlewares here\n    ];\n  }\n\n  const store = starterKitConfig({\n    reducer: createRootReducer(history),\n    middleware: middlewares,\n    devtools: process.env.NODE_ENV !== 'production'\n  });\n  return {\n    store,\n    persistor: persistStore(store)\n  };\n}\n\nexport default configureStore;\nexport { history };","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/store/index.js"],"names":["thunk","persistStore","routerMiddleware","createBrowserHistory","configureStore","starterKitConfig","createRootReducer","base","process","env","REACT_APP_BASE_PATH","history","basename","document","location","pathname","includes","reactRouterMiddleware","middlewares","NODE_ENV","store","reducer","middleware","devtools","persistor"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,YAAT,QAA6B,eAA7B;AACA,SAASC,gBAAT,QAAiC,wBAAjC;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,cAAc,IAAIC,gBAA3B,QAAmD,mBAAnD;AAEA,OAAOC,iBAAP,MAA8B,YAA9B;AAEA,MAAMC,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,mBAAZ,IAAmC,GAAhD;AAEA,MAAMC,OAAO,GAAGR,oBAAoB,CAAC;AACnCS,EAAAA,QAAQ,EAAEC,QAAQ,CAACC,QAAT,CAAkBC,QAAlB,CAA2BC,QAA3B,CAAoCT,IAApC,IAA4CA,IAA5C,GAAmD;AAD1B,CAAD,CAApC;;AAIA,SAASH,cAAT,GAA0B;AACxB,QAAMa,qBAAqB,GAAGf,gBAAgB,CAACS,OAAD,CAA9C;AACA,MAAIO,WAAW,GAAG,CAAClB,KAAD,EAAQiB,qBAAR,CAAlB;;AAEA,MAAIT,OAAO,CAACC,GAAR,CAAYU,QAAZ,KAAyB,YAA7B,EAA2C;AACzCD,IAAAA,WAAW,GAAG,CACZ,GAAGA,WADS,CAEZ;AAFY,KAAd;AAID;;AAED,QAAME,KAAK,GAAGf,gBAAgB,CAAC;AAC7BgB,IAAAA,OAAO,EAAEf,iBAAiB,CAACK,OAAD,CADG;AAE7BW,IAAAA,UAAU,EAAEJ,WAFiB;AAG7BK,IAAAA,QAAQ,EAAEf,OAAO,CAACC,GAAR,CAAYU,QAAZ,KAAyB;AAHN,GAAD,CAA9B;AAMA,SAAO;AACLC,IAAAA,KADK;AAELI,IAAAA,SAAS,EAAEvB,YAAY,CAACmB,KAAD;AAFlB,GAAP;AAID;;AAED,eAAehB,cAAf;AACA,SAASO,OAAT","sourcesContent":["import thunk from 'redux-thunk'\nimport { persistStore } from 'redux-persist'\nimport { routerMiddleware } from 'connected-react-router'\nimport { createBrowserHistory } from 'history'\nimport { configureStore as starterKitConfig } from 'redux-starter-kit'\n\nimport createRootReducer from './reducers'\n\nconst base = process.env.REACT_APP_BASE_PATH || '/'\n\nconst history = createBrowserHistory({\n  basename: document.location.pathname.includes(base) ? base : '/'\n})\n\nfunction configureStore() {\n  const reactRouterMiddleware = routerMiddleware(history)\n  let middlewares = [thunk, reactRouterMiddleware]\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares = [\n      ...middlewares\n      //add dev-only middlewares here\n    ]\n  }\n\n  const store = starterKitConfig({\n    reducer: createRootReducer(history),\n    middleware: middlewares,\n    devtools: process.env.NODE_ENV !== 'production'\n  })\n\n  return {\n    store,\n    persistor: persistStore(store)\n  }\n}\n\nexport default configureStore\nexport { history }\n"]},"metadata":{},"sourceType":"module"}