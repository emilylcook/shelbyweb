{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _slicedToArray from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/shelbyweb/src/sections/ContactMe.js\";\nimport React, { useState, useEffect } from 'react'; // import Grid from '@material-ui/core/Grid'\n\nimport { TextField, Typography, Avatar, Grid, Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useFormState } from 'react-use-form-state';\nimport axios from 'axios';\nimport { useSnackbar } from 'notistack';\nimport WidthContainer from '../WidthContainer';\nimport catImg from '../assets/catContact.jpg';\nimport { isFormSubmitDisabled } from '../utils';\nimport config from '../config'; // TODO\n// send email with api\n\nconst Home = () => {\n  const classes = useStyles();\n\n  const _useFormState = useFormState({}),\n        _useFormState2 = _slicedToArray(_useFormState, 2),\n        formState = _useFormState2[0],\n        _useFormState2$ = _useFormState2[1],\n        text = _useFormState2$.text,\n        email = _useFormState2$.email;\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        emailSent = _useState2[0],\n        setEmailSent = _useState2[1];\n\n  const _useSnackbar = useSnackbar(),\n        enqueueSnackbar = _useSnackbar.enqueueSnackbar;\n\n  const inputs = {\n    name: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'name',\n      label: 'Name',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    subject: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'subject',\n      label: 'Subject',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    email: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'email',\n      label: 'Email',\n      inputType: email,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    message: {\n      gridWidth: {\n        xs: 12\n      },\n      name: 'message',\n      label: 'Message',\n      inputType: text,\n      variant: 'outlined',\n      multiline: true,\n      rows: 4,\n      rowsMax: 12,\n      validator: {\n        required: true\n      }\n    }\n  };\n\n  function sendEmail() {\n    const _formState$values = formState.values,\n          subject = _formState$values.subject,\n          message = _formState$values.message,\n          email = _formState$values.email;\n    axios.post(\"\".concat(config.API, \"/sendEmail\"), {\n      subject,\n      message,\n      fromEmail: email\n    }).then(function (response) {\n      setEmailSent(true); // TODO set response then have a use effect on the response\n    }).catch(function (error) {\n      setEmailSent(false);\n    });\n  }\n\n  useEffect(() => {\n    const touchedForm = Object.keys(formState.touched).some(name => {\n      return formState.touched[name];\n    });\n\n    if (emailSent && touchedForm) {\n      formState.reset();\n      enqueueSnackbar('Email Sent', {\n        variant: 'success',\n        autoHideDuration: 4500\n      });\n      setEmailSent(false);\n    }\n  }, [emailSent, formState, enqueueSnackbar]);\n  const disableSubmit = isFormSubmitDisabled(inputs, formState); // TODO\n  // snackbar on successful sent, clear form (useEffect)\n\n  return React.createElement(WidthContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(\"section\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.section,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h3\",\n    className: classes.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112\n    },\n    __self: this\n  }, \"Contact Me\"), React.createElement(Typography, {\n    variant: \"subtitle2\",\n    className: classes.subTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }, \"*Resume available upon request\"), React.createElement(\"form\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 7,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121\n    },\n    __self: this\n  }, Object.entries(inputs).map(([index, _ref]) => {\n    let gridWidth = _ref.gridWidth,\n        name = _ref.name,\n        inputType = _ref.inputType,\n        rest = _objectWithoutProperties(_ref, [\"gridWidth\", \"name\", \"inputType\"]);\n\n    return React.createElement(Grid, Object.assign({\n      key: index,\n      item: true\n    }, gridWidth, {\n      className: classes.item,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), React.createElement(TextField, Object.assign({}, inputType({\n      name\n    }), {\n      name: name,\n      fullWidth: true\n    }, rest, {\n      error: formState.errors[name] ? true : false,\n      helperText: formState.errors[name],\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    })));\n  }), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    className: classes.submitButton,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  }, React.createElement(Button, {\n    disabled: disableSubmit,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: sendEmail,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139\n    },\n    __self: this\n  }, \"Send Email\")))), React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    sm: 12,\n    md: 5,\n    className: classes.catPhoto,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    alt: \"Sterling Lion\",\n    src: catImg,\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  })))))));\n};\n\nexport default Home;\nconst useStyles = makeStyles(theme => ({\n  catPhoto: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    }\n  },\n  avatar: {\n    margin: 10,\n    width: 300,\n    height: 300,\n    [theme.breakpoints.down('md')]: {\n      marginTop: 50,\n      width: 350,\n      height: 350\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 50,\n      width: 280,\n      height: 280\n    }\n  },\n  subTitle: {\n    marginBottom: 40,\n    textAlign: 'center',\n    color: 'rgb(141, 141, 141)',\n    marginLeft: 35\n  },\n  title: {\n    textAlign: 'center'\n  },\n  item: {\n    padding: '10px 0'\n  },\n  submitButton: {\n    textAlign: 'right',\n    paddingTop: 20\n  }\n}));","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/sections/ContactMe.js"],"names":["React","useState","useEffect","TextField","Typography","Avatar","Grid","Button","makeStyles","useFormState","axios","useSnackbar","WidthContainer","catImg","isFormSubmitDisabled","config","Home","classes","useStyles","formState","text","email","emailSent","setEmailSent","enqueueSnackbar","inputs","name","gridWidth","xs","label","inputType","variant","validator","required","subject","message","multiline","rows","rowsMax","sendEmail","values","post","API","fromEmail","then","response","catch","error","touchedForm","Object","keys","touched","some","reset","autoHideDuration","disableSubmit","section","title","subTitle","entries","map","index","rest","item","errors","submitButton","button","catPhoto","avatar","theme","display","justifyContent","breakpoints","down","alignItems","alignContent","margin","width","height","marginTop","marginBottom","textAlign","color","marginLeft","padding","paddingTop"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\n// import Grid from '@material-ui/core/Grid'\nimport { TextField, Typography, Avatar, Grid, Button } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useFormState } from 'react-use-form-state'\nimport axios from 'axios'\nimport { useSnackbar } from 'notistack'\n\nimport WidthContainer from '../WidthContainer'\nimport catImg from '../assets/catContact.jpg'\nimport { isFormSubmitDisabled } from '../utils'\nimport config from '../config'\n\n// TODO\n// send email with api\n\nconst Home = () => {\n  const classes = useStyles()\n  const [formState, { text, email }] = useFormState({})\n  const [emailSent, setEmailSent] = useState(false)\n  const { enqueueSnackbar } = useSnackbar()\n\n  const inputs = {\n    name: {\n      gridWidth: { xs: 12 },\n      name: 'name',\n      label: 'Name',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    subject: {\n      gridWidth: { xs: 12 },\n      name: 'subject',\n      label: 'Subject',\n      inputType: text,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    email: {\n      gridWidth: { xs: 12 },\n      name: 'email',\n      label: 'Email',\n      inputType: email,\n      variant: 'outlined',\n      validator: {\n        required: true\n      }\n    },\n    message: {\n      gridWidth: { xs: 12 },\n      name: 'message',\n      label: 'Message',\n      inputType: text,\n      variant: 'outlined',\n      multiline: true,\n      rows: 4,\n      rowsMax: 12,\n      validator: {\n        required: true\n      }\n    }\n  }\n\n  function sendEmail() {\n    const { subject, message, email } = formState.values\n    axios\n      .post(`${config.API}/sendEmail`, {\n        subject,\n        message,\n        fromEmail: email\n      })\n      .then(function(response) {\n        setEmailSent(true)\n        // TODO set response then have a use effect on the response\n      })\n      .catch(function(error) {\n        setEmailSent(false)\n      })\n  }\n\n  useEffect(() => {\n    const touchedForm = Object.keys(formState.touched).some(name => {\n      return formState.touched[name]\n    })\n\n    if (emailSent && touchedForm) {\n      formState.reset()\n\n      enqueueSnackbar('Email Sent', {\n        variant: 'success',\n        autoHideDuration: 4500\n      })\n\n      setEmailSent(false)\n    }\n  }, [emailSent, formState, enqueueSnackbar])\n\n  const disableSubmit = isFormSubmitDisabled(inputs, formState)\n\n  // TODO\n  // snackbar on successful sent, clear form (useEffect)\n\n  return (\n    <WidthContainer>\n      <section>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" className={classes.title}>\n            Contact Me\n          </Typography>\n          <Typography variant=\"subtitle2\" className={classes.subTitle}>\n            *Resume available upon request\n          </Typography>\n          <form>\n            <Grid container>\n              <Grid item xs={12} sm={12} md={7}>\n                <Grid container>\n                  {Object.entries(inputs).map(\n                    ([index, { gridWidth, name, inputType, ...rest }]) => (\n                      <Grid key={index} item {...gridWidth} className={classes.item}>\n                        <TextField\n                          {...inputType({\n                            name\n                          })}\n                          name={name}\n                          fullWidth\n                          {...rest}\n                          error={formState.errors[name] ? true : false}\n                          helperText={formState.errors[name]}\n                        />\n                      </Grid>\n                    )\n                  )}\n                  <Grid item xs={12} className={classes.submitButton}>\n                    <Button\n                      disabled={disableSubmit}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      className={classes.button}\n                      onClick={sendEmail}\n                    >\n                      Send Email\n                    </Button>\n                  </Grid>\n                </Grid>\n              </Grid>\n              <Grid item xs={12} sm={12} md={5} className={classes.catPhoto}>\n                <Avatar alt=\"Sterling Lion\" src={catImg} className={classes.avatar} />\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </section>\n    </WidthContainer>\n  )\n}\n\nexport default Home\n\nconst useStyles = makeStyles(theme => ({\n  catPhoto: {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    [theme.breakpoints.down('md')]: {\n      justifyContent: 'center',\n      alignItems: 'center',\n      alignContent: 'center'\n    }\n  },\n  avatar: {\n    margin: 10,\n    width: 300,\n    height: 300,\n    [theme.breakpoints.down('md')]: {\n      marginTop: 50,\n      width: 350,\n      height: 350\n    },\n    [theme.breakpoints.down('sm')]: {\n      marginTop: 50,\n      width: 280,\n      height: 280\n    }\n  },\n  subTitle: {\n    marginBottom: 40,\n    textAlign: 'center',\n    color: 'rgb(141, 141, 141)',\n    marginLeft: 35\n  },\n  title: {\n    textAlign: 'center'\n  },\n  item: {\n    padding: '10px 0'\n  },\n  submitButton: {\n    textAlign: 'right',\n    paddingTop: 20\n  }\n}))\n"]},"metadata":{},"sourceType":"module"}