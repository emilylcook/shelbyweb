{"ast":null,"code":"import _objectWithoutProperties from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/shelbyweb/src/WidthContainer.js\";\nimport React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/styles';\nimport clsx from 'clsx';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  container: {\n    [theme.breakpoints.down('lg')]: {\n      width: '960px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '1080px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%'\n    }\n  },\n  mobilePadding: {\n    [theme.breakpoints.down('sm')]: {\n      padding: '0px 5px'\n    }\n  }\n}));\n\nconst WidthContainer = (_ref) => {\n  let children = _ref.children,\n      fullWidth = _ref.fullWidth,\n      classNameProp = _ref.className,\n      props = _objectWithoutProperties(_ref, [\"children\", \"fullWidth\", \"className\"]);\n\n  const classes = useStyles();\n  let className = clsx(classes.container, classNameProp);\n\n  if (!fullWidth) {\n    className = clsx(classes.container, classNameProp, classes.mobilePadding);\n  }\n\n  return React.createElement(Grid, {\n    className: classes.root,\n    container: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(Grid, Object.assign({\n    className: className\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), children));\n};\n\nexport default WidthContainer;","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/WidthContainer.js"],"names":["React","Grid","makeStyles","clsx","useStyles","theme","root","width","display","justifyContent","container","breakpoints","down","up","mobilePadding","padding","WidthContainer","children","fullWidth","classNameProp","className","props","classes"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,SAASC,UAAT,QAA2B,qBAA3B;AACA,OAAOC,IAAP,MAAiB,MAAjB;AAEA,MAAMC,SAAS,GAAGF,UAAU,CAACG,KAAK,KAAK;AACrCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,MADH;AAEJC,IAAAA,OAAO,EAAE,MAFL;AAGJC,IAAAA,cAAc,EAAE;AAHZ,GAD+B;AAMrCC,EAAAA,SAAS,EAAE;AACT,KAACL,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BL,MAAAA,KAAK,EAAE;AADuB,KADvB;AAIT,KAACF,KAAK,CAACM,WAAN,CAAkBE,EAAlB,CAAqB,IAArB,CAAD,GAA8B;AAC5BN,MAAAA,KAAK,EAAE;AADqB,KAJrB;AAOT,KAACF,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BL,MAAAA,KAAK,EAAE;AADuB;AAPvB,GAN0B;AAiBrCO,EAAAA,aAAa,EAAE;AACb,KAACT,KAAK,CAACM,WAAN,CAAkBC,IAAlB,CAAuB,IAAvB,CAAD,GAAgC;AAC9BG,MAAAA,OAAO,EAAE;AADqB;AADnB;AAjBsB,CAAL,CAAN,CAA5B;;AAwBA,MAAMC,cAAc,GAAG,UAAiE;AAAA,MAA9DC,QAA8D,QAA9DA,QAA8D;AAAA,MAApDC,SAAoD,QAApDA,SAAoD;AAAA,MAA9BC,aAA8B,QAAzCC,SAAyC;AAAA,MAAZC,KAAY;;AACtF,QAAMC,OAAO,GAAGlB,SAAS,EAAzB;AAEA,MAAIgB,SAAS,GAAGjB,IAAI,CAACmB,OAAO,CAACZ,SAAT,EAAoBS,aAApB,CAApB;;AACA,MAAI,CAACD,SAAL,EAAgB;AACdE,IAAAA,SAAS,GAAGjB,IAAI,CAACmB,OAAO,CAACZ,SAAT,EAAoBS,aAApB,EAAmCG,OAAO,CAACR,aAA3C,CAAhB;AACD;;AACD,SACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEQ,OAAO,CAAChB,IAAzB;AAA+B,IAAA,SAAS,MAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAEc;AAAjB,KAAgCC,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACGJ,QADH,CADF,CADF;AAOD,CAdD;;AAgBA,eAAeD,cAAf","sourcesContent":["import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport { makeStyles } from '@material-ui/styles'\nimport clsx from 'clsx'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  container: {\n    [theme.breakpoints.down('lg')]: {\n      width: '960px'\n    },\n    [theme.breakpoints.up('lg')]: {\n      width: '1080px'\n    },\n    [theme.breakpoints.down('sm')]: {\n      width: '100%'\n    }\n  },\n  mobilePadding: {\n    [theme.breakpoints.down('sm')]: {\n      padding: '0px 5px'\n    }\n  }\n}))\n\nconst WidthContainer = ({ children, fullWidth, className: classNameProp, ...props }) => {\n  const classes = useStyles()\n\n  let className = clsx(classes.container, classNameProp)\n  if (!fullWidth) {\n    className = clsx(classes.container, classNameProp, classes.mobilePadding)\n  }\n  return (\n    <Grid className={classes.root} container>\n      <Grid className={className} {...props}>\n        {children}\n      </Grid>\n    </Grid>\n  )\n}\n\nexport default WidthContainer\n"]},"metadata":{},"sourceType":"module"}