{"ast":null,"code":"import _slicedToArray from \"/Users/ecook/Documents/projects/shelbyweb/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/ecook/Documents/projects/shelbyweb/src/MobileNav.js\";\nimport React from 'react';\nimport Button from '@material-ui/core/Button';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\nimport { HashLink as Link } from 'react-router-hash-link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Typography } from '@material-ui/core';\nimport { navItems } from './utils';\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  list: {\n    width: 300\n  },\n  paper: {\n    // backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.primary.main\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    color: theme.palette.text.primary\n  }\n}));\nexport default function MobileNav() {\n  const classes = useStyles(); //   const commonClasses = useHeaderStyles()\n\n  const _React$useState = React.useState(false),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        drawerOpenState = _React$useState2[0],\n        setDrawerOpenState = _React$useState2[1];\n\n  return React.createElement(React.Fragment, null, React.createElement(Button, {\n    \"aria-label\": \"Navigation Menu\",\n    \"aria-controls\": \"menu-appbar\",\n    \"aria-haspopup\": \"true\",\n    onClick: event => setDrawerOpenState(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(MenuIcon, {\n    className: classes.menuIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(SwipeableDrawer, {\n    \"data-testid\": \"MobileNavDrawer\",\n    anchor: \"left\",\n    open: drawerOpenState,\n    onClose: () => setDrawerOpenState(false),\n    onOpen: () => setDrawerOpenState(true),\n    classes: {\n      paper: classes.paper\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: classes.list,\n    role: \"presentation\",\n    onClick: () => setDrawerOpenState(false),\n    onKeyDown: () => setDrawerOpenState(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(List, {\n    id: \"MobileNavItems\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, Object.entries(navItems).map(([key, {\n    to,\n    label\n  }]) => React.createElement(ListItem, {\n    button: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, React.createElement(ListItemText, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, React.createElement(Link, {\n    smooth: true,\n    to: to,\n    className: classes.listItem,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    className: classes.listItemText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, label)))))))), React.createElement(\"div\", {\n    className: classes.grow,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }));\n}","map":{"version":3,"sources":["/Users/ecook/Documents/projects/shelbyweb/src/MobileNav.js"],"names":["React","Button","MenuIcon","List","ListItem","ListItemText","SwipeableDrawer","HashLink","Link","makeStyles","Typography","navItems","useStyles","theme","menuIcon","color","palette","text","primary","fontSize","list","width","paper","main","listItem","textDecoration","listItemText","MobileNav","classes","useState","drawerOpenState","setDrawerOpenState","event","Object","entries","map","key","to","label","grow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer'\nimport { HashLink as Link } from 'react-router-hash-link'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { Typography } from '@material-ui/core'\n\nimport { navItems } from './utils'\n\nconst useStyles = makeStyles(theme => ({\n  menuIcon: {\n    color: theme.palette.text.primary,\n    fontSize: '2.5rem !important'\n  },\n  list: {\n    width: 300\n  },\n  paper: {\n    // backgroundColor: theme.palette.primary.main,\n    color: theme.palette.text.primary.main\n  },\n  listItem: {\n    textDecoration: 'none !important'\n  },\n  listItemText: {\n    color: theme.palette.text.primary\n  }\n}))\n\nexport default function MobileNav() {\n  const classes = useStyles()\n  //   const commonClasses = useHeaderStyles()\n  const [drawerOpenState, setDrawerOpenState] = React.useState(false)\n\n  return (\n    <>\n      <Button\n        aria-label=\"Navigation Menu\"\n        aria-controls=\"menu-appbar\"\n        aria-haspopup=\"true\"\n        onClick={event => setDrawerOpenState(true)}\n      >\n        <MenuIcon className={classes.menuIcon} />\n      </Button>\n      <SwipeableDrawer\n        data-testid=\"MobileNavDrawer\"\n        anchor=\"left\"\n        open={drawerOpenState}\n        onClose={() => setDrawerOpenState(false)}\n        onOpen={() => setDrawerOpenState(true)}\n        classes={{ paper: classes.paper }}\n      >\n        <div\n          className={classes.list}\n          role=\"presentation\"\n          onClick={() => setDrawerOpenState(false)}\n          onKeyDown={() => setDrawerOpenState(true)}\n        >\n          <List id=\"MobileNavItems\">\n            {/* main nav items */}\n            {Object.entries(navItems).map(([key, { to, label }]) => (\n              <ListItem button>\n                <ListItemText>\n                  <Link smooth to={to} className={classes.listItem}>\n                    <Typography className={classes.listItemText}>{label}</Typography>\n                  </Link>\n                </ListItemText>\n              </ListItem>\n            ))}\n          </List>\n        </div>\n      </SwipeableDrawer>\n      <div className={classes.grow} />\n    </>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}